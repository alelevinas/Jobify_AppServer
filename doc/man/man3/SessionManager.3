.TH "SessionManager" 3 "Wed Dec 7 2016" "Version 1.0.0" "Jobify" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SessionManager \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SessionsDB\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSessionManager\fP (\fBDatabaseManager\fP *dbManager, double token_duration)"
.br
.ti -1c
.RI "void \fBset_token_duration\fP (double new_duration)"
.br
.ti -1c
.RI "std::string \fBadd_session\fP (std::string &username, std::string &password)"
.br
.ti -1c
.RI "std::string \fBget_username\fP (std::string &token)"
.br
.ti -1c
.RI "bool \fBhas_expired\fP (std::string &token)"
.br
.ti -1c
.RI "bool \fBdelete_session\fP (std::string &token)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Gets the session data stored with key 
.PP
\fBParameters:\fP
.RS 4
\fItoken\fP 
.br
\fItoken\fP The token generated by the 
.RE
.PP
\fBReturns:\fP
.RS 4
true if no database errors\&. False if de data is corrupted 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBKeyDoesntExistException\fP\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "std::string SessionManager::add_session (std::string & username, std::string & password)"
Adds a new session if password matches username\&. 
.PP
\fBParameters:\fP
.RS 4
\fIusername\fP the username 
.br
\fIpassword\fP the password 
.RE
.PP
\fBReturns:\fP
.RS 4
a token to acces the API\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBInvalidUsernamePasswordException\fP\fP 
.br
\fI\fBKeyAlreadyExistsException\fP\fP 
.RE
.PP

.SS "bool SessionManager::delete_session (std::string & token)"
Deletes the session corresponding to the token 
.PP
\fBParameters:\fP
.RS 4
\fItoken\fP The token generated in add_session 
.RE
.PP
\fBReturns:\fP
.RS 4
true if the session was deleted correctly 
.RE
.PP

.SS "std::string SessionManager::get_username (std::string & token)"
Gets the token's username 
.PP
\fBParameters:\fP
.RS 4
\fItoken\fP The token generated in add_session 
.RE
.PP
\fBReturns:\fP
.RS 4
the username 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBTokenInvalidException\fP\fP 
.RE
.PP

.SS "bool SessionManager::has_expired (std::string & token)"
Checks if the token has expired 
.PP
\fBParameters:\fP
.RS 4
\fItoken\fP The token generated in add_session 
.RE
.PP
\fBReturns:\fP
.RS 4
true if the token expired 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBTokenInvalidException\fP\fP 
.RE
.PP

.SS "void SessionManager::set_token_duration (double new_duration)"
Sets the new token duration 
.PP
\fBParameters:\fP
.RS 4
\fInew_duration\fP the new duration 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Jobify from the source code\&.
